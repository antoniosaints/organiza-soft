generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model RecursosHumanosFuncionarios {
  id                     Int                                     @id @default(autoincrement())
  contaSistemaId         Int
  ContaSistema           ContasSistema                           @relation(fields: [contaSistemaId], references: [id])
  nome                   String                                  @db.VarChar(140)
  cpf                    String                                  @db.VarChar(150)
  dataNascimento         String                                  @db.VarChar(50)
  email                  String                                  @db.VarChar(100)
  telefone               String                                  @db.VarChar(50)
  cargo                  String                                  @db.VarChar(100)
  dataAdmissao           DateTime?
  dataDemissao           DateTime?
  criadoPor              Int
  status                 StatusUsuario                           @default(ativo)
  UsuarioCriador         Usuario                                 @relation(fields: [criadoPor], references: [id])
  datacriado             DateTime                                @default(now())
  dataAtualizado         DateTime                                @updatedAt
  UsuariosInFuncionarios RecursosHumanosUsuariosInFuncionarios[]
}

model RecursosHumanosUsuariosInFuncionarios {
  id             Int                         @id @default(autoincrement())
  usuarioId      Int
  Usuarios       Usuario                     @relation(fields: [usuarioId], references: [id])
  funcionarioId  Int
  Funcionarios   RecursosHumanosFuncionarios @relation(fields: [funcionarioId], references: [id])
  contaSistemaId Int
  ContaSistema   ContasSistema               @relation(fields: [contaSistemaId], references: [id])
}

model Usuario {
  id                       Int                                     @id @default(autoincrement())
  contaSistemaId           Int
  ContaSistema             ContasSistema                           @relation(fields: [contaSistemaId], references: [id])
  nome                     String                                  @db.VarChar(100)
  email                    String                                  @db.VarChar(100)
  senha                    String                                  @db.VarChar(255)
  regra                    Permissao
  resetarSenha             Boolean                                 @default(true)
  lancamentosRetroativos   Boolean                                 @default(false)
  recebimentosRetroativos  Boolean                                 @default(false)
  pagamentosRetroativos    Boolean                                 @default(false)
  descontoMaximoVendaPdv   Float                                   @default(1)
  jurosMaximoLancamento    Float                                   @default(1)
  jurosMaximoRenegociacao  Float                                   @default(0)
  descontoMaximoLancamento Float                                   @default(1)
  dashboardFinanceiro      Boolean                                 @default(true)
  dashboardVendas          Boolean                                 @default(true)
  dashboardPatrimonio      Boolean                                 @default(true)
  dashboardCrm             Boolean                                 @default(true)
  rh                       Boolean                                 @default(true)
  assistenteIa             Boolean                                 @default(true)
  crm                      Boolean                                 @default(true)
  vendas                   Boolean                                 @default(true)
  financeiro               Boolean                                 @default(true)
  patrimonio               Boolean                                 @default(true)
  servicos                 Boolean                                 @default(true)
  assinantes               Boolean                                 @default(true)
  anotacoes                String?                                 @db.Text
  telefone                 String?                                 @db.VarChar(20)
  status                   StatusUsuario                           @default(ativo)
  dataCriacao              DateTime                                @default(now())
  Contas                   FinanceiroContas[]
  Vendas                   Vendas[]
  FinanceiroTransacao      FinanceiroTransacao[]
  UsuariosInFuncionarios   RecursosHumanosUsuariosInFuncionarios[]
  Funcionarios             RecursosHumanosFuncionarios[]

  @@unique([email, contaSistemaId, senha])
}

model Cliente {
  id                    Int                   @id @default(autoincrement())
  contaSistemaId        Int
  ContaSistema          ContasSistema         @relation(fields: [contaSistemaId], references: [id])
  nome                  String                @db.VarChar(100)
  email                 String                @db.VarChar(100)
  telefone              String?               @db.VarChar(20)
  telefoneAlternativo   String?
  endereco              String?               @db.Text
  status                StatusUsuario         @default(ativo)
  cpfCnpj               String?
  tipoCliente           TiposClientes         @default(fisica)
  instagram             String?
  site                  String?
  canalPreferidoContato CanalPreferidoContato @default(telefone)
  cep                   String?
  estado                String?               @db.Char(2)
  cidade                String?               @db.VarChar(100)
  pais                  String?               @db.VarChar(40)
  saldoDevedor          Float?                @default(0)
  limiteCredito         Float?                @default(0)
  segmento              String?
  scoreFinanceiro       Int?
  dataBloqueio          DateTime?
  dataUltimaCompra      DateTime?
  dataCriacao           DateTime              @default(now())
  Assinatura            Assinatura[]
  Vendas                Vendas[]

  @@unique([contaSistemaId, cpfCnpj], map: "uniqueContaIdECpfCnpj")
}

enum TiposClientes {
  fisica
  juridica
}

enum CanalPreferidoContato {
  email
  telefone
  whatsapp
  instagram
  facebook
  twitter
  telegram
  sms
  chat
  linkedin
  skype
  correio
  outro
}

model Assinatura {
  id              Int                  @id @default(autoincrement())
  contaSistemaId  Int
  ContaSistema    ContasSistema        @relation(fields: [contaSistemaId], references: [id])
  clienteId       Int
  planoId         Int
  dataInicio      DateTime
  dataFim         DateTime
  status          Status               @default(ativa)
  dataBloqueio    DateTime?
  dataCriacao     DateTime             @default(now())
  dataDesbloqueio DateTime?
  Cliente         Cliente              @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  Plano           AssinaturaPlano      @relation(fields: [planoId], references: [id], onDelete: Restrict)
  Bloqueio        AssinaturaBloqueio[]

  @@index([clienteId], map: "Assinatura_clienteId_fkey")
  @@index([planoId], map: "Assinatura_planoId_fkey")
}

model AssinaturaPlano {
  id              Int           @id @default(autoincrement())
  contaSistemaId  Int
  ContaSistema    ContasSistema @relation(fields: [contaSistemaId], references: [id])
  nome            String        @db.VarChar(100)
  descricao       String?       @db.Text
  preco           Float
  cor             String
  dataCriacao     DateTime      @default(now())
  dataAtualizacao DateTime?
  Assinatura      Assinatura[]
}

model AssinaturaBloqueio {
  id              Int           @id @default(autoincrement())
  contaSistemaId  Int
  ContaSistema    ContasSistema @relation(fields: [contaSistemaId], references: [id])
  motivo          String        @db.Text
  dataBloqueio    DateTime?
  dataDesbloqueio DateTime?
  assinaturaId    Int
  Assinatura      Assinatura    @relation(fields: [assinaturaId], references: [id], onDelete: Cascade)

  @@index([assinaturaId], map: "Bloqueio_assinaturaId_fkey")
}

model Configuracoes {
  id             Int           @id @default(autoincrement())
  contaSistemaId Int
  ContaSistema   ContasSistema @relation(fields: [contaSistemaId], references: [id])
  chave          String
  valor          String
  dataCriacao    DateTime      @default(now())
}

model FinanceiroTransacao {
  id                     Int                      @id @default(autoincrement())
  contaSistemaId         Int
  ContaSistema           ContasSistema            @relation(fields: [contaSistemaId], references: [id])
  codigoLancamento       String
  valor                  Float                    @default(0)
  descricao              String                   @db.Text
  categoriaId            Int
  fornecedorId           Int?
  contaId                Int
  dataEfetivado          DateTime?
  usuarioEfetivou        Int?
  dataVencimento         DateTime
  dataLancamento         DateTime                 @default(now())
  dataPagamento          DateTime?
  usuarioLancamento      Int
  codigoNfe              String?
  codigo_servico         String?
  taxaJuros              Float?                   @default(0)
  juros                  Float?                   @default(0)
  taxaDesconto           Float?                   @default(0)
  desconto               Float?                   @default(0)
  moeda                  String?                  @default("BRL")
  taxaCambio             Float?                   @default(0)
  referenciaExterna      String?
  metodoPagamento        String?                  @db.VarChar(50)
  natureza               NaturezaTransacao
  operacao               TipoOperacao
  parcelado              Parcelado                @default(nao)
  status                 StatusTransacao          @default(pendente)
  valorFinal             Float                    @default(0)
  Categoria              FinanceiroCategorias     @relation(fields: [categoriaId], references: [id], onDelete: Restrict)
  Conta                  FinanceiroContas         @relation(fields: [contaId], references: [id], onDelete: Restrict)
  UsuarioLancamento      Usuario                  @relation(fields: [usuarioLancamento], references: [id], onDelete: Restrict)
  FinanceiroParcelamento FinanceiroParcelamento[]
  VendasOnLancamentos    VendasOnLancamentos[]

  @@unique([codigoLancamento, contaSistemaId])
  @@index([categoriaId], map: "Transacao_categoriasId_fkey")
  @@index([contaId], map: "Transacao_contaId_fkey")
  @@index([dataLancamento, dataEfetivado, dataVencimento], map: "Transacao_datasIndex_fkey")
  @@index([status], map: "Transacao_Status_fkey")
}

model FinanceiroParcelamento {
  id              Int                   @id @default(autoincrement())
  contaSistemaId  Int
  ContaSistema    ContasSistema         @relation(fields: [contaSistemaId], references: [id])
  tipo            FinanceiroTipoParcela @default(parcela)
  transacaoId     Int
  parcela         Int
  status          StatusTransacao       @default(pendente)
  valor           Float
  desconto        Float?
  valorRecebido   Float?
  dataRecebimento DateTime?
  dataVencimento  DateTime
  dataCadastro    DateTime              @default(now())
  Transacao       FinanceiroTransacao   @relation(fields: [transacaoId], references: [id], onDelete: Cascade)

  @@index([transacaoId], map: "Parcelamento_transacaoId_fkey")
}

enum FinanceiroTipoParcela {
  entrada
  parcela
  ajuste
}

model FinanceiroCategorias {
  id                  Int                   @id @default(autoincrement())
  contaSistemaId      Int
  ContaSistema        ContasSistema         @relation(fields: [contaSistemaId], references: [id])
  categoria           String
  cor                 String
  FinanceiroTransacao FinanceiroTransacao[]
}

model FinanceiroContas {
  id                  Int                   @id @default(autoincrement())
  contaSistemaId      Int
  ContaSistema        ContasSistema         @relation(fields: [contaSistemaId], references: [id])
  conta               String                @db.VarChar(200)
  saldo               Float                 @default(0)
  regra               Regra                 @default(privada)
  userId              Int
  cor                 String?
  descricao           String                @db.Text
  Usuario             Usuario               @relation(fields: [userId], references: [id], onDelete: Restrict)
  FinanceiroTransacao FinanceiroTransacao[]

  @@index([userId], map: "Contas_userId_fkey")
}

model EmailConfigs {
  id             Int           @id @default(autoincrement())
  titulo         String        @db.VarChar(100)
  servidor       String        @db.VarChar(140)
  porta          Int
  emailRemetente String        @db.VarChar(100)
  senha          String        @db.VarChar(140)
  contaSistemaId Int
  ContaSistema   ContasSistema @relation(fields: [contaSistemaId], references: [id], onDelete: Restrict)
}

model TelegramConfigs {
  id             Int           @id @default(autoincrement())
  bot            String        @db.VarChar(100)
  botApiKey      String        @db.VarChar(150)
  contaSistemaId Int
  ContaSistema   ContasSistema @relation(fields: [contaSistemaId], references: [id], onDelete: Restrict)
}

model ContasSistema {
  id                            Int                                     @id @default(autoincrement())
  conta                         String
  email                         String                                  @unique
  slug                          String?
  descricao                     String?                                 @db.Text
  plano                         PlanosSistema                           @default(free)
  status                        ContasSistemaStatus                     @default(ativa)
  telefone                      String                                  @default("")
  lancamentosRetroativos        Boolean                                 @default(true)
  notificacaoEmail              Boolean                                 @default(false)
  notificacaoTelegram           Boolean                                 @default(false)
  redefinirSenha                Boolean                                 @default(true)
  monitorarEstoque              Boolean                                 @default(false)
  stripeCustomerId              String
  stripeSubscriptionId          String?
  dataCriado                    DateTime                                @default(now())
  dataAtualizada                DateTime                                @updatedAt
  Usuario                       Usuario[]
  Cliente                       Cliente[]
  AssinaturaPlano               AssinaturaPlano[]
  Assinatura                    Assinatura[]
  Configuracoes                 Configuracoes[]
  FinanceiroTransacao           FinanceiroTransacao[]
  FinanceiroParcelamento        FinanceiroParcelamento[]
  FinanceiroCategorias          FinanceiroCategorias[]
  FinanceiroContas              FinanceiroContas[]
  Bloqueio                      AssinaturaBloqueio[]
  PatrimonioProdutos            PatrimonioProdutos[]
  PatrimonioProdutoCategoria    PatrimonioProdutoCategoria[]
  PatrimonioArmazenamentos      PatrimonioArmazenamentos[]
  PatrimonioProdutosEstoques    PatrimonioProdutosEstoques[]
  PatrimonioProdutosMovimentos  PatrimonioProdutosMovimentos[]
  PatrimonioFornecedores        PatrimonioFornecedores[]
  PatrimonioComprasFornecedores PatrimonioComprasFornecedores[]
  Vendas                        Vendas[]
  VendasRelatorios              VendasRelatorios[]
  VendasPagamentos              VendasPagamentos[]
  EmailConfigs                  EmailConfigs[]
  TelegramConfigs               TelegramConfigs[]
  Funcionarios                  RecursosHumanosFuncionarios[]
  UsuariosInFuncionarios        RecursosHumanosUsuariosInFuncionarios[]
}

model PatrimonioProdutos {
  id                            Int                             @id @default(autoincrement())
  produtoId                     String                          @unique
  produto                       String
  cor                           String
  contaSistemaId                Int
  codigoBarra                   String?                         @unique @db.VarChar(50)
  controlado                    SimOuNao                        @default(nao)
  unidade                       String                          @default("UN")
  produzido                     SimOuNao                        @default(nao)
  ncm                           String?                         @db.VarChar(10)
  cest                          String?                         @db.VarChar(10)
  cfop                          Int?
  cst                           String?                         @db.VarChar(5)
  origem                        String                          @default("0")
  ContaSistema                  ContasSistema                   @relation(fields: [contaSistemaId], references: [id], onDelete: Restrict)
  categoriaId                   Int
  Categoria                     PatrimonioProdutoCategoria      @relation(fields: [categoriaId], references: [id], onDelete: Restrict)
  descricao                     String                          @db.Text
  sku                           String
  preco                         Float                           @db.Double
  dataCriado                    DateTime                        @default(now())
  dataAtualizado                DateTime                        @updatedAt
  PatrimonioProdutosEstoques    PatrimonioProdutosEstoques[]
  PatrimonioProdutosMovimentos  PatrimonioProdutosMovimentos[]
  PatrimonioComprasFornecedores PatrimonioComprasFornecedores[]
  VendasRelatorios              VendasRelatorios[]

  @@index([categoriaId], map: "categoria_produto_key")
}

model PatrimonioProdutoCategoria {
  id                 Int                  @id @default(autoincrement())
  categoria          String
  cor                String               @default("blue")
  contaSistemaId     Int
  ContaSistema       ContasSistema        @relation(fields: [contaSistemaId], references: [id])
  descricao          String?              @db.Text
  dataCriado         DateTime             @default(now())
  dataAtualizado     DateTime             @updatedAt
  PatrimonioProdutos PatrimonioProdutos[]
}

model PatrimonioArmazenamentos {
  id                           Int                            @id @default(autoincrement())
  armazen                      String
  local                        String?
  contaSistemaId               Int
  ContaSistema                 ContasSistema                  @relation(fields: [contaSistemaId], references: [id])
  dataCriado                   DateTime                       @default(now())
  dataAtualizado               DateTime                       @updatedAt
  PatrimonioProdutosEstoques   PatrimonioProdutosEstoques[]
  PatrimonioProdutosMovimentos PatrimonioProdutosMovimentos[]
}

model PatrimonioProdutosEstoques {
  id             Int                      @id @default(autoincrement())
  Produto        PatrimonioProdutos       @relation(fields: [produtoId], references: [id], onDelete: Restrict)
  produtoId      Int
  Armazen        PatrimonioArmazenamentos @relation(fields: [armazenId], references: [id], onDelete: Restrict)
  armazenId      Int
  contaSistemaId Int
  ContaSistema   ContasSistema            @relation(fields: [contaSistemaId], references: [id])
  estoqueMinimo  Int
  quantidade     Int                      @default(0)
  pdv            SimOuNao                 @default(nao)
  dataCriado     DateTime                 @default(now())
  dataAtualizado DateTime                 @updatedAt

  @@unique([produtoId, armazenId], map: "produto_armazen_id")
}

model PatrimonioProdutosMovimentos {
  id             Int                      @id @default(autoincrement())
  Produto        PatrimonioProdutos       @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  produtoId      Int
  valorUnitario  Float                    @db.Double
  notaFiscal     String?
  Armazen        PatrimonioArmazenamentos @relation(fields: [armazenId], references: [id], onDelete: Restrict)
  armazenId      Int
  contaSistemaId Int
  ContaSistema   ContasSistema            @relation(fields: [contaSistemaId], references: [id])
  tipo           PatrimonioTipoMovimento
  quantidade     Int
  dataMovimento  DateTime                 @default(now())
  motivoAjuste   String?
  descricao      String?

  @@index([produtoId])
  @@index([armazenId])
}

model PatrimonioFornecedores {
  id               Int                             @id @default(autoincrement())
  nome             String
  cpf_cnpj         String
  contato          String?
  email            String?
  descricao        String?                         @db.Text
  contaSistemaId   Int
  ContaSistema     ContasSistema                   @relation(fields: [contaSistemaId], references: [id])
  dataUltimaCompra DateTime?
  status           StatusUsuario                   @default(ativo)
  dataCriado       DateTime                        @default(now())
  dataAtualizado   DateTime                        @updatedAt
  ComprasProdutos  PatrimonioComprasFornecedores[]
}

model PatrimonioComprasFornecedores {
  id             Int                    @id @default(autoincrement())
  Produto        PatrimonioProdutos     @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  produtoId      Int
  Fornecedor     PatrimonioFornecedores @relation(fields: [fornecedorId], references: [id], onDelete: Restrict)
  fornecedorId   Int
  quantidade     Float
  contaSistemaId Int
  ContaSistema   ContasSistema          @relation(fields: [contaSistemaId], references: [id])

  @@index([produtoId, fornecedorId], map: "produto_fornecedor_id")
}

model Vendas {
  id                  Int                   @id @default(autoincrement())
  uniqueId            String                @unique
  contaSistemaId      Int
  ContaSistema        ContasSistema         @relation(fields: [contaSistemaId], references: [id])
  clienteId           Int
  Cliente             Cliente               @relation(fields: [clienteId], references: [id], onDelete: Restrict)
  vendedorId          Int
  Vendedor            Usuario               @relation(fields: [vendedorId], references: [id], onDelete: Restrict)
  valor               Float                 @db.Double
  desconto            Float                 @default(0) @db.Float
  valorDesconto       Float                 @default(0) @db.Double
  status              StatusVendas
  descricao           String?               @db.Text
  metodoPagamento     String                @db.VarChar(50)
  dataCriacao         DateTime              @default(now())
  dataAtualizada      DateTime              @updatedAt
  VendasPagamentos    VendasPagamentos[]
  VendasRelatorios    VendasRelatorios[]
  VendasOnLancamentos VendasOnLancamentos[]
}

model VendasOnLancamentos {
  id           Int                 @id @default(autoincrement())
  vendaId      Int
  Venda        Vendas              @relation(references: [id], fields: [vendaId], onDelete: Restrict)
  lancamentoId Int
  Lancamento   FinanceiroTransacao @relation(references: [id], fields: [lancamentoId], onDelete: Restrict)
}

model VendasRelatorios {
  id             Int                @id @default(autoincrement())
  contaSistemaId Int
  ContaSistema   ContasSistema      @relation(fields: [contaSistemaId], references: [id])
  vendaId        Int
  Venda          Vendas             @relation(fields: [vendaId], references: [id], onDelete: Cascade)
  produtoId      Int
  Produtos       PatrimonioProdutos @relation(fields: [produtoId], references: [id], onDelete: Restrict)
  produto        String
  quantidade     Float
  preco          Float              @db.Double
  total          Float              @db.Double
}

model VendasPagamentos {
  id              Int           @id @default(autoincrement())
  contaSistemaId  Int
  ContaSistema    ContasSistema @relation(fields: [contaSistemaId], references: [id])
  vendaId         Int
  Venda           Vendas        @relation(fields: [vendaId], references: [id], onDelete: Cascade)
  valor           Float         @db.Double
  metodoPagamento String        @db.VarChar(50)
  statusPagamento StatusVendas
  gatewayId       String
  dataCriacao     DateTime      @default(now())
  dataAtualizado  DateTime      @updatedAt
}

enum PatrimonioTipoMovimento {
  entrada
  saida
  ajuste
}

enum SimOuNao {
  sim
  nao
}

enum StatusVendas {
  pendente
  cancelado
  pago
  estornado
  processando
}

enum ContasSistemaStatus {
  ativa
  vencida
  cancelada
  inativa
}

enum PlanosSistema {
  free
  pro
  admin
}

enum PeriodoParcelas {
  mensal
  semanal
  diario
  anual
}

enum Parcelado {
  sim
  nao
}

enum Status {
  ativa
  vencida
  cancelada
}

enum NaturezaTransacao {
  receita
  despesa
}

enum StatusTransacao {
  recebido
  pendente
  cancelada
}

enum Regra {
  publica
  privada
}

enum TipoOperacao {
  entrada
  saida
  transferencia
  ajuste
}

enum StatusUsuario {
  ativo
  inativo
}

enum Permissao {
  proprietario
  socio
  admin
  gerente
  moderador
  submoderador
  visualizador
}
